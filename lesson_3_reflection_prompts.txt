When would you want to use a remote repository rather than keeping all your work
local?

I would want to use a remote repository when I wanted to share my work with other people or keeping record of the files on the cloud as a backup.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

Because not not always I would want to share changes with others, only when makes sense.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

Fork: When you want to clone one repository from a github project to your user repository. Then is traceable and appears on the other repository who forked.
Clone: When you want to copy locally a repository from your Github repository or from another user/proect
Branch: To start different functionality to a repository, maybe merged later or not, only for showing/demo/experimental purposes.

What is the benefit of having a copy of the last known state of the remote
stored locally?

The benefit is that having the latest changes there are less probabilities of having to do a manual merge. Also, a tiny merge is preferable
than a large merge. Finally, having the latest changes is better to test the code in an integrated way.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

I will collaborate in open source projects that interest me to help them and to learn and improve my coding skills. The easier part would be to make a fork and the harder part would be to make manual merges on projects that I am not familiar into them.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

When working with other people, and with changes that have to be approved by someone is useful to work in a different branch and then make a pull request.

